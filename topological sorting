#include <iostream>
#include <conio.h>
#include <math.h>
#include <stack>
using namespace std;
void topological_sort(int a[10][10], int n)
{
    int indeg[10];
    int T[10];
    stack<int> s;
    for (int i = 0; i < n; i++)
    {
        int sum = 0;
        for (int j = 0; j < n; j++)
        {
            sum = sum + a[j][i];
        }
        indeg[i] = sum;
    }

    for (int i = 0; i < n; i++)
    {
        if (indeg[i] == 0)
        {
            s.push(i);
        }
    }

    int sol = 0;
    int u;
    while (!s.empty())
    {
        u = s.top();
        s.pop();
        T[sol] = u;
        for (int i = 0; i < n; i++)
        {
            if (a[u][i] != 0)
            {
                indeg[i]--;
                if (indeg[i] == 0)
                {
                    s.push(i);
                }
            }
        }
        sol++;
    }

    for (int i = 0; i < n; i++)
    {
        cout << T[i] << '\n';
    }
}
void data_entry_matrix(int n)
{

    int a[10][10];
    cout << "enter the adjacency matrix\n";

    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            cin >> a[i][j];
        }
    }

    topological_sort(a, n);
}
int main()
{
    int n;
    cout << "enter the number of vertices\n";
    cin >> n;
    data_entry_matrix(n);

    return 0;
}
